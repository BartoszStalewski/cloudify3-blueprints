tosca_definitions_version: cloudify_dsl_1_0

#######
# Cloudify Blueprint which describes a xap cluster (single node)
#
imports:
    - /home/yohana/work/cosmo/imports/spec/cloudify/3.1/types.yaml
    - nodetype.yaml
    - inputs.yaml
    - extras.yaml
    - http://www.getcloudify.org/spec/diamond-plugin/1.1/plugin.yaml



node_templates:
         xap_management_vm:
            type: xap.monitoredServer
            properties:
                ip: 127.0.0.1
                cloudify_agent:
                    key: /home/vagrant/.ssh/agent_key.pem
                    user: vagrant

         xap_datagrid_vm:
            type: xap.monitoredServer
            properties:
                ip: 127.0.0.1
                cloudify_agent:
                    key: /home/vagrant/.ssh/agent_key.pem
                    user: vagrant

         xap_gateway_vm:
            type: xap.monitoredServer
            properties:
                ip: 127.0.0.1
                cloudify_agent:
                    key: /home/vagrant/.ssh/agent_key.pem
                    user: vagrant

         xap_management:
            type: xap_type
            properties:
                lus_cnt: 1
                global_lus_cnt: 0
                gsm_cnt: 1
                global_gsm_cnt: 0
                gsc_cnt: { get_input: xap_management_gscs_count }
                zones: { get_input: xap_management_zones }
                GSM_JAVA_OPTIONS: -Xms128m -Xmx128m
            relationships:
                -   target: xap_management_vm
                    type: cloudify.relationships.contained_in
            interfaces:
                admin.commands:
                  deploy_grid:
                      implementation: xap_admin_plugin.xap_admin_plugin.tasks.deploy_grid
                      inputs:
                          script: xap-scripts/deploy-grid.sh
                  undeploy_grid:
                      implementation: xap_admin_plugin.xap_admin_plugin.tasks.undeploy_grid
                      inputs:
                          script: xap-scripts/undeploy-grid.sh
                  deploy_pu:
                      implementation: xap_admin_plugin.xap_admin_plugin.tasks.deploy_pu
                      inputs:
                          script: xap-scripts/deploy-pu.sh

                cloudify.interfaces.lifecycle:
                  create: xap-scripts/install-xap.sh
                  start: xap-scripts/start-xap.sh
                  stop: xap-scripts/stop-xap.sh


         xap_datagrid:
            type: xap_datagrid_type
            properties:
                gsc_cnt: { get_input: xap_grid_gscs_count }
                zones: { get_input: xap_grid_zones }
            relationships:
                -   target: xap_datagrid_vm
                    type: cloudify.relationships.contained_in
                -   target: xap_management
                    type: xap_connected_to_lus
            interfaces:
                cloudify.interfaces.lifecycle:
                  create: xap-scripts/install-xap.sh
                  start: xap-scripts/start-xap.sh
                  stop: xap-scripts/stop-xap.sh

         xap_gateway:
            type: xap_gateway_type
            properties:
                space_name: { get_input: xap_gateway_spacename }
                space_zones: { get_input: xap_grid_zones }
                restpu_zones: { get_input: xap_management_zones }
                gsc_cnt: { get_input: xap_gateway_gscs_count }
                zones: { get_input: xap_gateway_zones }
                discport: { get_input: xap_gateway_discoport }
                commport: { get_input: xap_gateway_commport }
                gwname: { get_input: xap_gateway_gwname }
                sources: { get_input: xap_gateway_sources }
                targets: { get_input: xap_gateway_targets }
                lookups: { get_input: xap_gateway_lookups }

            relationships:
                -   target: xap_gateway_vm
                    type: cloudify.relationships.contained_in
                -   target: xap_management
                    type: xap_connected_to_lus
                -   target: xap_datagrid
                    type: cloudify.relationships.depends_on
            interfaces:
                cloudify.interfaces.lifecycle:
                  create: xap-scripts/install-xap.sh
                  start: xap-scripts/start-gateway.sh
                  stop: xap-scripts/stop-xap.sh

         webui:
            type: xap_webui_type
            interfaces:
                cloudify.interfaces.lifecycle:
                  start: xap-scripts/start-ui.sh
                  stop: xap-scripts/stop-ui.sh
            relationships:
                - target: xap_management_vm
                  type: cloudify.relationships.contained_in
                - target: xap_management
                  type: cloudify.relationships.depends_on

         demo_shell:
            type: demo_shell_type
            interfaces:
                cloudify.interfaces.lifecycle:
                  create: butterfly-scripts/install.sh
                  start: butterfly-scripts/start.sh
            relationships:
                - target: xap_management_vm
                  type: cloudify.relationships.contained_in
                - target: xap_management
                  type: cloudify.relationships.depends_on


groups:
    autohealing_group:
      members: [xap_management_vm,webui]
      policies:
        simple_autoheal_policy:
          type: cloudify.policies.types.host_failure
          triggers:
            auto_heal_trigger:
              type:
                cloudify.policies.triggers.execute_workflow
              parameters:
                workflow: auto_heal_workflow
                allow_custom_parameters: True
                workflow_parameters:
                  node_id:
                    get_property: ['SELF', 'failing_node']
                  diagnose_value:
                    get_property: ['SELF', 'diagnose']

outputs:

    management_ui:
      description: XAP UI URL
      value:
        ip: {  get_attribute: [ xap_management_vm,  ip_address ] }
        port: 7104

